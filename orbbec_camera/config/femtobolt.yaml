# config/*.yaml files are used to configure the camera parameters
#
# For Femto Mega and Femto Bolt devices, Configuration of depth NFOV and WFOV modes.
# NFOV and WFOV modes are achieved by configuring the resolution of Depth and IR in the startup file.
# In the startup file, depth_width, depth_height, ir_width, ir_height represent the resolution of depth and the resolution of IR, respectively.
# The frame rate and resolution of IR must be consistent with depth. The corresponding relationship between different modes and resolution is as follows:
# • NFOV unbinned: 640 x 576.
# • NFOV binned: 320 x 288.
# • WFOV unbinned: 1024 x 1024.
# • WFOV binned: 512 x 512.
#
---
orbbec_ros:
    camera_parameters:
        general:
            # Camera model. upport product models by referencing config/*.yaml
            camera_model: "femtobolt"
            # Path to the configuration file. If empty, default parameters will be used
            config_file_path: "femtobolt.yaml"

        deivce:
            # camera name, usually overwritten by launch file
            camera_name: "camera"
            # camera serial number, usually overwritten by launch file
            serial_number: ""
            # The USB port of the camera. This parameter is required when using multiple cameras.
            usb_port: ""
            # Number of devices. If multiple cameras are required, this parameter must be filled in launch file
            device_num: 1
            # The delay time for reopening the device, in milliseconds. Usually, there is no need to modify by default.
            connection_delay: 100

        color:
            # If true, the color image will be enabled
            enable_color: true
            # Width of the color image. If 0, the default width will be used
            color_width: 1280
            # Height of the color image. If 0, the default height will be used
            color_height: 720
            # If 0, the default FPS will be used
            color_fps: 30
            # Format of the color image.
            color_format: "MJPG"

        depth:
            # If true, the depth image will be enabled
            enable_depth: true
            # Width of the depth image. If 0, the default width will be used
            depth_width: 640
            # Height of the depth image. If 0, the default height will be used
            depth_height: 576
            # If 0, the default FPS will be used
            depth_fps: 30
            # Format of the depth image.
            depth_format: "Y16"
            # If false, the depth scale will not be enabled
            enable_depth_scale: true
            # Depth registration mode.
            depth_registration: false
            # The alignment mode to be used. Options are "HW" for hardware alignment and "SW" for software alignment
            align_mode: "SW"
            filter:
                soft_filter:
                    # If false, the soft filter will not be enabled
                    enable_soft_filter: true
                    # The maximum difference between the current and previous depth frame to be considered valid
                    soft_filter_max_diff: -1
                    # The size of the speckle to be filtered out
                    soft_filter_speckle_size: -1

        ir:
            # If false, the left IR image will not be enabled
            enable_ir: true
            # Width of the left IR image. If 0, the default width will be used
            ir_width: 640
            # Height of the left IR image. If 0, the default height will be used
            ir_height: 576
            # If 0, the default FPS will be used
            ir_fps: 30
            # Format of the left IR image. Supported formats are 'Y8'
            ir_format: "Y16"

        imu:
            # If true, the IMU accelerometer data will be enabled
            enable_accel: false
            # Rate of the
            accel_rate: "200hz"
            # Range of the accelerometer.
            accel_range: "4g"
            # If true, the IMU gyroscope data will be enabled
            enable_gyro: false
            # Rate of the gyroscope.
            gyro_rate: "200hz"
            # Range of the gyroscope.
            gyro_range: "1000dps"
            # enable_sync_output_accel_gyro
            enable_sync_output_accel_gyro: true

        advanced:
            # If true, the extrinsics publish will be enabled
            enable_publish_extrinsic: false
            # If true, the frame synchronization will be enabled
            enable_frame_sync: true
            # If true, Overlay display of color image and depth image after D2C processing will be enabled
            enable_d2c_viewer: false
            # If false, the hardware time will not be used
            use_hardware_time: true
            # If false, the host time will not be synchronized with the device time
            enable_sync_host_time: false

            device_sync:
                # Device synchronization mode. supports: {1.FREE_RUN 2.STANDALONE 3.PRIMARY 4.SECONDARY 5.SECONDARY_SYNCED 6.SOFTWARE_TRIGGERING 7.HARDWARE_TRIGGERING}.
                # For details, Please refer to the OBMultiDeviceSyncMode-related comments in SDK/include/libobsensor/ObTypes.h for a detailed explanation of each mode.
                sync_mode: "STANDALONE"
                # The delay time of the depth image capture after receiving the capture command or trigger signal in microseconds.
                # For details, Please refer to the OBMultiDeviceSyncConfig-related comments in SDK/include/libobsensor/ObTypes.h
                depth_delay_us: 0
                # The delay time of the color image capture after receiving the capture command or trigger signal in microseconds.
                color_delay_us: 0
                # The delay time of the image capture after receiving the capture command or trigger signal in microseconds.
                trigger2image_delay_us: 0
                # Trigger signal output enable flag.
                trigger_out_enabled: true
                # The delay time of the trigger signal output after receiving the capture command or trigger signal in microseconds.
                trigger_out_delay_us: 0
                # The frame number of each stream after each trigger in triggering mode.
                frames_per_trigger: 2
                # software trigger period in ms
                software_trigger_period: 33
