# config/*.yaml files are used to configure the camera parameters
---
orbbec_ros:
    camera_parameters:
        general:
            # Camera model. upport product models by referencing config/*.yaml
            camera_model: "gemini330_series"
            # Path to the configuration file. If empty, default parameters will be used
            config_file_path: "gemini330_series.yaml"

        deivce:
            # camera name, usually overwritten by launch file
            camera_name: "camera_test1"
            # camera serial number, usually overwritten by launch file
            serial_number: ""
            # The USB port of the camera. This parameter is required when using multiple cameras.
            usb_port: "2-2-3"
            # Number of devices. If multiple cameras are required, this parameter must be filled in launch file
            device_num: 2
            # The delay time for reopening the device, in milliseconds. Usually, there is no need to modify by default.
            connection_delay: 10
            # If true, the heartbeat will be enabled
            enable_heartbeat: false
            # If true, the camera will be reset
            enable_hardware_reset: false
            # If true, the LDP will be enabled
            enable_ldp: true
            # The preset of the device. #For details, Please refer to the comments in SDK/include/libobsensor/Advanced.h for a detailed explanation
            # Predefined presets doc reference: docs/source/2_installation/package_description.md
            # Deep working mode support is as follows:{"Default","Hand","High Accuracy","High Density","Medium Density","Custom"}
            device_preset: "Default"

        color:
            # If true, the color image will be enabled
            enable_color: true
            # Width of the color image. If 0, the default width will be used
            color_width: 0
            # Height of the color image. If 0, the default height will be used
            color_height: 0
            # Fps of the color image. If 0, the default FPS will be used
            color_fps: 0
            # default Format of the color image.
            color_format: "MJPG"
            # enable auto exposure for the color image
            enable_color_auto_exposure: true
            # enable auto white balance for the color image
            enable_color_auto_white_balance: true
            # If true, the color image will be undistorted
            enable_color_undistortion: false

        depth:
            # If true, the depth image will be enabled
            enable_depth: true
            # Width of the depth image. If 0, the default width will be used
            depth_width: 0
            # Height of the depth image. If 0, the default height will be used
            depth_height: 0
            # Fps of the depth image. If 0, the default FPS will be used
            depth_fps: 0
            # default Format of the depth image.
            depth_format: "Y16"
            # If false, the depth scale will not be enabled
            enable_depth_scale: true

            # D2C Depth registration mode.
            # Enables hardware that aligns depth frames to color frames. This field is required when setting enable_colored_point_cloud to true
            depth_registration: true
            # The alignment mode to be used. Options are "HW" for hardware alignment and "SW" for software alignment
            align_mode: "SW"

            laser:
                # Whether to enable the laser. Default value is true
                enable_laser: false
                # Laser Switch Alternate Mode, 0: Off, 1: On-Off Alternate, 2: Off-On Alternate. Default value is 0.
                laser_on_off_mode: 0

            filter:
                # -enable_decimation_filter
                enable_decimation_filter: false
                # -enable_hdr_merge
                enable_hdr_merge: false
                # -enable_sequence_id_filter
                enable_sequence_id_filter: false
                # -enable_threshold_filter
                enable_threshold_filter: false
                # -enable_noise_removal_filter
                enable_noise_removal_filter: true
                # -enable_spatial_filter
                enable_spatial_filter: false
                # -enable_temporal_filter
                enable_temporal_filter: false
                # -enable_hole_filling_filter
                enable_hole_filling_filter: false
                # -noise_removal_filter_min_diff
                noise_removal_filter_min_diff: 256
                # -noise_removal_filter_max_size
                noise_removal_filter_max_size: 80
                # -enable_soft_filter
                enable_soft_filter: true

        leftir:
            # the left IR image will not be enabled
            enable_left_ir: true

        rightir:
            # the right IR image will not be enabled
            enable_right_ir: true

        imu:
            # If true, the IMU accelerometer data will be enabled
            enable_accel: false
            # The frequency of the accelerometer can be selected as 1.5625Hz, 3.125Hz, 6.25Hz, 12.5Hz, 25Hz, 50Hz, 100Hz, 200Hz, 500Hz, 1kHz, 2kHz, 4kHz, 8kHz, 16kHz, 32kHz.
            # The specific value depends on the current camera.
            accel_rate: "200hz"
            # The range of the accelerometer, the optional values are 2g, 4g, 8g, 16g. The specific value depends on the current camera.
            accel_range: "4g"
            # If true, the IMU gyroscope data will be enabled
            enable_gyro: false
            # The frequency of the gyroscope can be selected as 1.5625hz, 3.125hz, 6.25hz, 12.5hz, 25hz, 50hz, 100hz, 200hz, 500hz, 1kHz, 2kHz, 4kHz, 8kHz, 16kHz, 32kHz.
            # The specific value depends on the current camera.
            gyro_rate: "200hz"
            # The range of the gyroscope, the optional values are 16dps, 31dps, 62dps, 125dps, 250dps, 500dps, 1000dps, 2000dps. The specific value depends on the current camera.
            gyro_range: "1000dps"
            # enable_sync_output_accel_gyro
            enable_sync_output_accel_gyro: false

        point_cloud:
            # enable point cloud. {fase:disable, true:enable}
            enable_point_cloud: false

        advanced:
            # If true, the extrinsics publish will be enabled
            enable_publish_extrinsic: false
            # If true, the frame synchronization will be enabled
            enable_frame_sync: true
            # Publish D2C superimposed image (only for testing).
            enable_d2c_viewer: false
            # If false, the hardware time will not be used, true:devicetime, false:systemtime
            use_hardware_time: true
            # the host time will be synchronized with the device time
            enable_sync_host_time: true

            device_sync:
                # Device synchronization mode. supports: {1.FREE_RUN 2.STANDALONE 3.PRIMARY 4.SECONDARY 5.SECONDARY_SYNCED 6.SOFTWARE_TRIGGERING 7.HARDWARE_TRIGGERING}.
                # For details, Please refer to the OBMultiDeviceSyncMode-related comments in SDK/include/libobsensor/ObTypes.h for a detailed explanation of each mode.
                sync_mode: "STANDALONE"
                # The delay time of the depth image capture after receiving the capture command or trigger signal in microseconds.
                # For details, Please refer to the OBMultiDeviceSyncConfig-related comments in SDK/include/libobsensor/ObTypes.h
                depth_delay_us: 0
                # The delay time of the color image capture after receiving the capture command or trigger signal in microseconds.
                color_delay_us: 0
                # The delay time of the image capture after receiving the capture command or trigger signal in microseconds.
                trigger2image_delay_us: 0
                # Trigger signal output enable flag.
                trigger_out_enabled: true
                # The delay time of the trigger signal output after receiving the capture command or trigger signal in microseconds.
                trigger_out_delay_us: 0
                # The frame number of each stream after each trigger in triggering mode.
                frames_per_trigger: 2
                # software trigger period in ms
                software_trigger_period: 33
